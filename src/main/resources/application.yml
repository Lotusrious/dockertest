spring:
  application:
    name: travel-agent-backend
    
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
    
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:traveldb}
    username: ${DB_USER:traveluser}
    password: ${DB_PASSWORD:travelpass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 100
    show-sql: false
    open-in-view: false
    
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:redispass}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:rabbit}
    password: ${RABBITMQ_PASSWORD:rabbitpass}
    virtual-host: /
    
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}
      
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
    
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      
security:
  jwt:
    secret: ${JWT_SECRET:your-secret-key-change-this-in-production}
    expiration: ${JWT_EXPIRATION:86400000}
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
    
external:
  openai:
    api-key: ${OPENAI_API_KEY:}
    model: gpt-3.5-turbo
    max-tokens: 2000
    temperature: 0.7
    
  kakao:
    api-key: ${KAKAO_API_KEY:}
    api-url: https://dapi.kakao.com
    
  google:
    maps-api-key: ${GOOGLE_MAPS_API_KEY:}
    
  stripe:
    api-key: ${STRIPE_API_KEY:}
    webhook-secret: ${STRIPE_WEBHOOK_SECRET:}
    
storage:
  type: ${STORAGE_TYPE:local}
  local:
    upload-dir: ${UPLOAD_DIR:./uploads}
  s3:
    bucket-name: ${S3_BUCKET_NAME:}
    region: ${AWS_REGION:ap-northeast-2}
    access-key: ${AWS_ACCESS_KEY_ID:}
    secret-key: ${AWS_SECRET_ACCESS_KEY:}
    
logging:
  level:
    root: INFO
    com.travelagent: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/travel-agent.log
    max-size: 10MB
    max-history: 30
    
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    
cors:
  allowed-origins:
    - http://localhost:3000
    - http://localhost:3001
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - "*"
  exposed-headers:
    - Authorization
    - Content-Type
  allow-credentials: true
  max-age: 3600
  
---
spring:
  config:
    activate:
      on-profile: docker
      
  datasource:
    url: jdbc:postgresql://postgres:5432/traveldb
    
  redis:
    host: redis
    
  rabbitmq:
    host: rabbitmq
    
---
spring:
  config:
    activate:
      on-profile: test
      
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        
  h2:
    console:
      enabled: true
      
  redis:
    host: localhost
    port: 6379
    
logging:
  level:
    root: WARN
    com.travelagent: INFO